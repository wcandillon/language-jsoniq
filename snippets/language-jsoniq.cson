'.source.jsoniq':
  'for':
    'prefix': 'for'
    'body': 'for $${1:item} in ${2:expr}${3}'
  'return':
    'prefix': 'return'
    'body': 'return ${1:expr}${2}'
  'import':
    'prefix': 'import'
    'body': 'import module namespace ${1:ns} = "${2:http://www.example.com/}";\n${3}'
  'some':
    'prefix': 'some'
    'body': 'some $${1:varname} in ${2:expr} satisfies ${3:expr}${4}'
  'every':
    'prefix': 'every'
    'body': 'every $${1:varname} in ${2:expr} satisfies ${3:expr}${4}'
  'if':
    'prefix': 'if'
    'body': 'if(${1:true}) then\n  ${2:expr}\nelse\n  ${3:true}${4}'
  'switch':
    'prefix': 'switch'
    'body': 'switch(${1:"foo"})\ncase ${2:"foo"}\nreturn ${3:true}\ndefault return ${4:false}${5}'
  'try':
    'prefix': 'try'
    'body': 'try {\n  ${1:expr}\n} catch ${2:*} {\n  ${3:expr}\n}${4}'
  'tumbling':
    'prefix': 'tumbling'
    'body': '
    	for tumbling window $${1:varname} in ${2:expr}\nstart at $${3:start} when ${4:expr}\nend at $${5:end} when ${6:expr}\nreturn ${7:expr}${8}'
  'sliding':
    'prefix': 'sliding'
    'body': 'for sliding window $${1:varname} in ${2:expr}\nstart at $${3:start} when ${4:expr}\nend at $${5:end} when ${6:expr}\nreturn ${7:expr}${8}'
  'let':
    'prefix': 'let'
    'body': 'let $${1:varname} := ${2:expr}${3}'
  'group':
    'prefix': 'group'
    'body': 'group by $${1:varname} := ${2:expr}${3}'
  'order':
    'prefix': 'order'
    'body': 'order by $${1:expr} ${2:descending}${3}'
  'stable':
    'prefix': 'stable'
    'body': 'stable order by $${1:expr}${2}'
  'count':
    'prefix': 'count'
    'body': 'count $${1:varname}${2}'
  'ordered':
    'prefix': 'ordered'
    'body': 'ordered { ${1:expr} }${2}'
  'unordered':
    'prefix': 'unordered'
    'body': 'unordered { ${1:expr} }${2}'
  'treat':
    'prefix': 'treat'
    'body': 'treat as ${1:expr}${2}'
  'castable':
    'prefix': 'castable'
    'body': 'castable as ${1:atomicType}${2}'
  'cast':
    'prefix': 'cast'
    'body': 'cast as ${1:atomicType}${2}'
  'typeswitch':
    'prefix': 'typeswitch'
    'body': 'typeswitch(${1:expr})\ncase ${2:type}  return ${3:expr}\ndefault return ${4:expr}${5}'
  'var':
    'prefix': 'var'
    'body': 'declare variable $${1:varname} := ${2:expr};${3}'
  'fn':
    'prefix': 'fn'
    'body': 'declare function ${1:ns}:${2:name}(){\n  ${3:expr}\n};\n\n${4}'
  'module':
    'prefix': 'module'
    'body': 'module namespace ${1:ns} = "${2:http://www.example.com}";\n\n${3}'
